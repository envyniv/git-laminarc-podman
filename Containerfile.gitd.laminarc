FROM docker.io/library/alpine:3 AS base
RUN adduser -SDh /var/lib/laminar -g 'Laminar' -G users laminar

FROM docker.io/library/alpine:3 AS base
RUN adduser -SDh /var/lib/laminar -g 'Laminar' -G users laminar

FROM base AS build
RUN apk add --no-cache \
    boost-dev \
    build-base \
    cmake \
    git \
    ninja \
    openssl-dev \
    openssl-libs-static \
    rapidjson-dev \
    sqlite-dev \
    sqlite-static \
    upx \
    zlib \
    zlib-dev \
    zlib-static

ADD --keep-git-dir https://github.com/capnproto/capnproto.git#master:c++ /opt/capnproto/src
RUN cmake -B /opt/capnproto/build -S /opt/capnproto/src -G Ninja  \
    -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_FIND_LIBRARY_SUFFIXES=.a -DCMAKE_EXE_LINKER_FLAGS=-static -DBUILD_SHARED_LIBS=OFF \
    -DZLIB_USE_STATIC_LIBS=ON -DOPENSSL_USE_STATIC_LIBS=ON -DWITH_FIBERS=OFF -DBUILD_TESTING=OFF && \
    cmake --build /opt/capnproto/build && \
    cmake --install /opt/capnproto/build

ADD --keep-git-dir https://github.com/ohwgiles/laminar.git /opt/laminar/src
RUN cmake -B /opt/laminar/build -S /opt/laminar/src -G Ninja  \
    -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_FIND_LIBRARY_SUFFIXES=.a -DCMAKE_EXE_LINKER_FLAGS=-static -DBUILD_SHARED_LIBS=OFF \
    -DZLIB_USE_STATIC_LIBS=ON -DOPENSSL_USE_STATIC_LIBS=ON -DSQLite3_LIBRARY=/usr/lib/libsqlite3.a && \
    cmake --build /opt/laminar/build && \
    cmake --install /opt/laminar/build --strip && \
    upx /usr/bin/laminarc #/usr/sbin/laminard

FROM base AS laminarc
RUN apk add --no-cache capnproto zlib openssh git
RUN ssh-keygen -A
COPY --from=build /usr/bin/laminarc /usr/bin/laminarc

# from https://github.com/jkarlosb/git-server-docker/blob/master/Dockerfile
WORKDIR /git-server/

# -D flag avoids password generation
# -s flag changes user's shell
RUN mkdir /git-server/keys \
  && adduser -D -s /usr/bin/git-shell git \
  && echo git:12345 | chpasswd \
  && mkdir /home/git/.ssh

# More info: https://git-scm.com/docs/git-shell
COPY git-shell-commands /home/git/git-shell-commands

# sshd_config file is edited to allow only key auth

COPY <<EOF /etc/ssh/sshd_config
RSAAuthentication yes \
PubkeyAuthentication yes \
AuthorizedKeysFile	.ssh/authorized_keys \
PasswordAuthentication no \
Subsystem	sftp	/usr/lib/ssh/sftp-server \
EOF

COPY <<EOF start.sh 
#!/bin/sh

# If there is some public key in keys folder
# then it copies their contents to the authorized_keys file
if [ "$(ls -A /git-server/keys/)" ]; then
  cd /home/git
  cat /git-server/keys/*.pub > .ssh/authorized_keys
  chown -R git:git .ssh
  chmod 700 .ssh
  chmod -R 600 .ssh/*
fi

# Checking permissions and fixing SGID bit in repos folder
# More info: https://github.com/jkarlosb/git-server-docker/issues/1
if [ "$(ls -A /git-server/repos/)" ]; then
  cd /git-server/repos
  chown -R git:git .
  chmod -R ug+rwX .
  find . -type d -exec chmod g+s '{}' +
fi

# -D flag avoids executing sshd as a daemon
/usr/sbin/sshd -D
EOF

EXPOSE 22

CMD ["sh", "start.sh"]

